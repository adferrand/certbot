name: Certbot PR build

on: [push, pull_request]

jobs:
  test:
    strategy:
      matrix:
        include:
          - toxenv: py37
            os: macos
            python-version: 3.7
          - toxenv: cover
            os: macos
            python-version: 3.11
          - toxenv: py-win
            os: windows
            python-version: 3.7
          - toxenv: cover-win
            os: windows
            python-version: 3.9
          - toxenv: integration-certbot
            os: windows
            python-version: 3.9
          - toxenv: oldest
            os: ubuntu
            python-version: 3.7
          - toxenv: py37
            os: ubuntu
            python-version: 3.7
          - toxenv: cover
            os: ubuntu
            python-version: 3.11
          - toxenv: lint-posix
            os: ubuntu
            python-version: 3.11
          - toxenv: mypy
            os: ubuntu
            python-version: 3.11
          - toxenv: integration
            os: ubuntu
            python-version: 3.8
          - toxenv: apache_compat
            os: ubuntu
            python-version: 3.11
          - toxenv: apacheconftest-with-pebble
            os: ubuntu
            python-version: 3.11
          - toxenv: nginxroundtrip
            os: ubuntu
            python-version: 3.11
      fail-fast: false
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout Certbot code
        uses: actions/checkout@v4
      # As of pip 23.1.0, builds started failing on macOS unless env variable PIP_USE_PEP517 is set.
      # See https://github.com/certbot/certbot/pull/9717#issuecomment-1610861794.
      - name: Prepare MacOS runtime dependencies
        run: |
          unset HOMEBREW_NO_INSTALL_FROM_API
          brew untap homebrew/core homebrew/cask
          brew update
          brew install augeas
          echo "PIP_USE_PEP517=true" >> "$GITHUB_ENV"
        if: matrix.os == 'macos'
      - name: Prepare Linux runtime dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libaugeas0 \
            nginx-light
          sudo systemctl stop nginx
          sudo sysctl net.ipv4.ip_unprivileged_port_start=0
        if: matrix.os == 'ubuntu'
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python runtime dependencies
        run: |
          python3 tools/pip_install.py tox
      - name: Run tox
        run: |
          env
          python3 -m tox
        env:
          TOXENV: ${{ matrix.toxenv }}
